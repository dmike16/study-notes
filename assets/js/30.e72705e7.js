(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{434:function(e,t,s){"use strict";s.r(t);var a=s(56),v=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"observable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#observable"}},[e._v("#")]),e._v(" Observable")]),e._v(" "),s("p",[e._v("Observable are lazy "),s("em",[e._v("Push")]),e._v(" collections of multiple values. They emit some value, but are lazy to see those\nvalues we need to subscribe to them. It's the only way to call an Observable.")]),e._v(" "),s("h3",{attrs:{id:"push-vs-pull"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push-vs-pull"}},[e._v("#")]),e._v(" Push vs Pull")]),e._v(" "),s("p",[e._v("In a pull system the consumer determined when it receives the data from the producer.\nIn a push system the producer deciedes whene delivers dato to the consumer.")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th"),e._v(" "),s("th",[e._v("Producer")]),e._v(" "),s("th",[e._v("Consumer")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("Pull")]),e._v(" "),s("td",[e._v("Passive")]),e._v(" "),s("td",[e._v("Active")])]),e._v(" "),s("tr",[s("td",[e._v("Push")]),e._v(" "),s("td",[e._v("Active")]),e._v(" "),s("td",[e._v("Passive")])])])]),e._v(" "),s("h3",{attrs:{id:"observable-as-generalizazions-of-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#observable-as-generalizazions-of-function"}},[e._v("#")]),e._v(" Observable as generalizazions of function")]),e._v(" "),s("p",[e._v("Observable ara not like Promise and may act as EventEmitter but")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("Observables are like functions but with zero argumnets, but generalize to\nallow multiple values.")])]),e._v(" "),s("p",[e._v("Observables like function are lazy, if you don't call a function the body is not excuded.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("Subscribe to observables is like calling a function. observables can deliver values "),s("em",[e._v("aync")]),e._v("\nor "),s("em",[e._v("sync")])])]),e._v(" "),s("p",[e._v("The difference with functions is that observables can return multiple values over the time.")]),e._v(" "),s("h3",{attrs:{id:"anatomy-of-an-observable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#anatomy-of-an-observable"}},[e._v("#")]),e._v(" Anatomy of an Observable")]),e._v(" "),s("p",[e._v("Principal concepts of observables are:")]),e._v(" "),s("ul",[s("li",[s("em",[e._v("creating")]),e._v(" observables")]),e._v(" "),s("li",[s("em",[e._v("subscrubing")]),e._v(" to observables")]),e._v(" "),s("li",[s("em",[e._v("executing")]),e._v(" observables")]),e._v(" "),s("li",[s("em",[e._v("disposing")]),e._v(" observables")])]),e._v(" "),s("h4",{attrs:{id:"creating-observables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-observables"}},[e._v("#")]),e._v(" Creating Observables")])])}),[],!1,null,null,null);t.default=v.exports}}]);