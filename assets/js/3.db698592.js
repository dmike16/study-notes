(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{403:function(t,e,s){t.exports=s.p+"assets/img/web-push.02f965a5.svg"},404:function(t,e,s){t.exports=s.p+"assets/img/vapid.ee1aafc7.svg"},405:function(t,e,s){t.exports=s.p+"assets/img/jwt.33718603.svg"},444:function(t,e,s){"use strict";s.r(e);var a=s(56),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"web-push-protocol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-push-protocol"}},[t._v("#")]),t._v(" Web Push Protocol")]),t._v(" "),a("p",[a("img",{attrs:{src:s(403),alt:"WebPush Flow"}})]),t._v(" "),a("h3",{attrs:{id:"web-push-vapid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-push-vapid"}},[t._v("#")]),t._v(" Web Push VAPID")]),t._v(" "),a("p",[a("em",[t._v("VAPID")]),t._v("(Voluntary Application Server Identifier) it's a system whereby an application\nserver can identify itself to the push server. The step to build a VAPID are:")]),t._v(" "),a("p",[t._v(". Generate and mantain a keys pair generated with ECDSA over a P-256 curve, send\nthe public key to the push server during subscription,")]),t._v(" "),a("p",[t._v(". in the request of push message include a ''JWT'' signed with the private key\ngenerated above using a ES256 algorithm")]),t._v(" "),a("p",[t._v(". insert two header :")]),t._v(" "),a("ul",[a("li",[a("em",[t._v("Authoritazion")]),t._v(": "),a("code",[t._v("Web Push <JWT>")])]),t._v(" "),a("li",[a("em",[t._v("Crypto-Key")]),t._v(": "),a("code",[t._v("ps56ecdsa=<public-key>")])])]),t._v(" "),a("p",[a("img",{attrs:{src:s(404),alt:"VPID"}})]),t._v(" "),a("h3",{attrs:{id:"jason-web-token-jwt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jason-web-token-jwt"}},[t._v("#")]),t._v(" Jason Web Token (JWT)")]),t._v(" "),a("p",[t._v("The JWT is a way of sending informations to third party so that the reciver can\nvalidate who sent it. A signed JWT is just three strings diveded by a dot.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(405),alt:"JWT"}})]),t._v(" "),a("ul",[a("li",[t._v("The first string it's a json url-base64 encoded and rappresents information\nabout the JWT for web push must be :")])]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"aud"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<endpoint>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<expiration time in seconds>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sub"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mailto:<email@email.com> | <url>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("The expiration time must be no longer 24 hours.")]),t._v(" "),a("ul",[a("li",[t._v("the third string is the signature and it's the result of taking the first two\nstrings joining them with a dot and signing it. The algo used is ES256 = ECDSA\nusing P-256 curve and the SHA-256 algorithm.")])]),t._v(" "),a("p",[t._v("Then we have to create two header")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Authorization: 'WebPush <JWT Info>.<JWT Data>.<Signature>' \nCrypto-Key: p256ecdsa=<URL Safe Base64 Public Application Server Key>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);