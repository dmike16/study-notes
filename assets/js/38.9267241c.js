(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{443:function(e,s,t){"use strict";t.r(s);var a=t(56),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"subscribe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#subscribe"}},[e._v("#")]),e._v(" Subscribe")]),e._v(" "),t("p",[e._v("To subscribe we use the function "),t("code",[e._v("subscribe()")]),e._v(" from PushManager API.\nIt returns a Promise that resolve if the following steps has completed :")]),e._v(" "),t("ul",[t("li",[e._v("The user has granted permission to push notification")]),e._v(" "),t("li",[e._v("The broswer has sent a network request to a push server to get the details to\ngenerate a push subscription.")])]),e._v(" "),t("p",[e._v("The method acept a javascript object like argument:")]),e._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("userVisibleOnly")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("applicationServerKey")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" applicationServerKey\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("ul",[t("li",[t("em",[e._v("userVisibleOnly")]),e._v(": this  parameter is an admission that you will show a notification\nevery time a push is sent, it's requered and must  be true.\napplicationServerKey:: is  a public key your push server will use to send messages\nto client apps via the push server and must be of type "),t("code",[e._v("UInt8Array")]),e._v(".")])])])}),[],!1,null,null,null);s.default=r.exports}}]);